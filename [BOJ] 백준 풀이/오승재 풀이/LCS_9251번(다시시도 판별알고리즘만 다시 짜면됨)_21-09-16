#include <iostream>
/*
	두 문자열의 문자중 공통된 문자만 순서대로 저장한다면 쉽게 해결될것 같다.



*/
void Printboolarr(bool arr[]);

int main()
{
	std::string s1, s2;
	
	std::cin>>s1>>s2;
	//Input Data	
	bool AlphabetArrS1[26];
	bool AlphabetArrS2[26];
	bool CommonAlphabet[26];
	
	for(int i=0;i<26;i++)
		AlphabetArrS1[i]=AlphabetArrS2[i]=CommonAlphabet[i]=false;
		
	for(int i=0;i<s1.length();i++)
		AlphabetArrS1[s1.at(i)-'A']=true;
				
	for(int i=0;i<s2.length();i++)
		AlphabetArrS2[s1.at(i)-'A']=true;

	for(int i=0;i<26;i++)
		if(AlphabetArrS1[i]&&AlphabetArrS2[i])
			CommonAlphabet[i]=true;
	//공통 요소 찾아내기
	char* subs1, *subs2;
	int subs1length=0, subs2length=0;
	subs1= new char [s1.length()]; subs2= new char [s2.length()];
	
	for(int i=0;i<s1.length();i++)
		if(CommonAlphabet[s1.at(i)-'A'])
			subs1[subs1length++]=s1.at(i);
		
	for(int i=0;i<s2.length();i++)
		if(CommonAlphabet[s2.at(i)-'A'])
			subs2[subs2length++]=s2.at(i);
	//두 문자열의 곂치는 부분만 따로 문자열에 저장시킴
	int* sublength= new int [subs1length];
	
	std::cout<<"subs1 is "<<subs1<<'\n'<<"subs2 is "<<subs2<<std::endl;
	
	for(int i=0;i<subs1length;i++)
	{
		int count=0,idx =i;
		for(int j=0;j<subs2length;j++)
		{
			if(subs1[idx]==subs2[j])
			{	count++;idx++;	}
		}
		sublength[i]=count;
		//std::cout<<"sublength["<<i<<"] == "<<sublength[i]<<std::endl;	
	}
	//각 위치에서 시작했을때 CS의 길이
	int longest=0;
	for(int i=0;i<subs1length;i++)
		longest=std::max(longest,sublength[i]);
		
	
	std::cout<<longest;

	
	delete []subs1; delete []subs2; delete []sublength;
	subs1=subs2=NULL;
	sublength=NULL;
	return 0;
}


void Printboolarr(bool arr[])
{
	for(int i=0;i<26;i++)
	{
		if(arr[i])
		std::cout<<static_cast<char>(i+'A')<<" is "<<arr[i]<<std::endl;	
	}	
	std::cout<<std::endl;
}